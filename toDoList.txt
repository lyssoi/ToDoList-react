import React, { useState } from "react";
import { useForm } from "react-hook-form";

// interface IFormData {
//   [key: string]: string;
// }

// interface IForm {
//   email: string;
//   lastname: string;
//   firstname: string;
//   username: string;
//   password: string;
//   password1: string;
//   extraError?: string;
// }

// function ToDoList() {
//   const {
//     register,
//     handleSubmit,
//     formState: { errors },
//     setError,
//   } = useForm<IForm>({
//     defaultValues: {
//       email: "@naver.com",
//     },
//   });
//   const onValid = (data: IForm) => {
//     if (data.password !== data.password1) {
//       return setError(
//         "password1",
//         { message: "Password are not the same" },
//         { shouldFocus: true }
//       );
//     }
//     // setError("extraError", { message: "Server offline" });
//   };
//   return (
//     <div>
//       <form
//         style={{ display: "flex", flexDirection: "column" }}
//         onSubmit={handleSubmit(onValid)}
//       >
//         <input
//           {...register("email", {
//             required: "Email is required",
//             pattern: {
//               value: /^[A-Za-z0-9._%+-]+@naver.com$/,
//               message: "Only naver.com emails allowed",
//             },
//           })}
//           placeholder="Email"
//         />
//         <span>{errors?.email?.message as string}</span>
//         <input
//           {...register("lastname", { required: "wrtie here" })}
//           placeholder="Last Name"
//         />
//         <span>{errors?.lastname?.message as string}</span>
//         <input
//           {...register("firstname", {
//             required: "wrtie here",
//             validate: (value) =>
//               value.includes("nico") ? "no nicos allowed" : true,
//           })}
//           placeholder="First Name"
//         />
//         <span>{errors?.firstname?.message as string}</span>
//         <input
//           {...register("username", { required: "wrtie here", minLength: 10 })}
//           placeholder="Username"
//         />
//         <span>{errors?.username?.message as string}</span>
//         <input
//           {...register("password", { required: "wrtie here", minLength: 5 })}
//           placeholder="Password"
//         />
//         <span>{errors?.password?.message as string}</span>
//         <input
//           {...register("password1", {
//             required: "Password is required",
//             minLength: {
//               value: 5,
//               message: "short!",
//             },
//           })}
//           placeholder="Password1"
//         />
//         <span>{errors?.password1?.message as string}</span>
//         <button>Add</button>
//         {/* <span>{errors?.extraError?.message as string}</span> */}
//       </form>
//     </div>
//   );
// }

function ToDoList() {
  const [toDo, setToDo] = useState("");
  const [toDoError, setToDoError] = useState("");
  const [value, setValue] = useState("");
  const onChange = (event: React.FormEvent<HTMLInputElement>) => {
    const {
      currentTarget: { value },
    } = event;
    setToDoError("");
    setToDo(value);
  };
  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    console.log(toDo);
    if (toDo.length < 10) {
      return setToDoError("To do should be longer");
    }
  };
  return (
    <div>
      <form onSubmit={onSubmit}>
        <input onChange={onChange} value={toDo} placeholder="Write a to do" />
        <button>Add</button>
        {toDoError !== "" ? toDoError : null}
      </form>
    </div>
  );
}
export default ToDoList;
